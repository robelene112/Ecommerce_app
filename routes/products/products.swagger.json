{
	"/products": {
		"get": {
			"tags": ["Products"],
			"summary": "Retrieve the products page.",
			"description": "Returns the products.html page for the user to view and manage their products.",
			"responses": {
				"200": {
					"description": "Successfully retrieved products page.",
					"content": {
						"text/html": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"delete": {
			"tags": ["Products"],
			"summary": "Delete a product.",
			"description": "Deletes a specified product from the database.",
			"parameters": [
				{
					"in": "body",
					"name": "product",
					"description": "The product to delete.",
					"schema": {
						"type": "object",
						"required": [
							"idToDelete"
						],
						"properties": {
							"idToDelete": {
								"type": "integer",
								"description": "The ID of the product to delete."
							}
						}
					}
				}
			],
			"responses": {
				"204": {
					"description": "Successfully deleted product."
				}
			}
		}
	},
	"/products/create": {
		"get": {
			"tags": ["Products"],
			"summary": "View the create product page.",
			"description": "Returns the create_product.html page for the user to add a new product.",
			"responses": {
				"200": {
					"description": "Successfully retrieved create product page.",
					"content": {
						"text/html": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"post": {
			"tags": ["Products"],
			"summary": "Create a new product.",
			"description": "Adds a new product to the database.",
			"parameters": [
				{
					"in": "body",
					"name": "product",
					"description": "The product details to add.",
					"schema": {
						"type": "object",
						"required": [
							"product_name",
							"stock"
						],
						"properties": {
							"product_name": {
								"type": "string",
								"description": "The name of the product."
							},
							"stock": {
								"type": "integer",
								"description": "The stock amount of the product."
							}
						}
					}
				}
			],
			"responses": {
				"302": {
					"description": "Successfully added product and redirected to products page."
				},
				"400": {
					"description": "Product already exists."
				}
			}
		},
		"/products/browse": {
			"get": {
			"tags": ["Products"],
				"summary": "View the browse products page.",
				"description": "Returns the browse_product.html page for the user to browse available products.",
				"responses": {
					"200": {
						"description": "Successfully retrieved browse products page.",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/products/edit": {
			"get": {
			"tags": ["Products"],
				"summary": "View the edit product page.",
				"description": "Returns the edit_product.html page for the user to edit their products.",
				"responses": {
					"200": {
						"description": "Successfully retrieved edit product page.",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
			"tags": ["Products"],
				"summary": "Edit a product.",
				"description": "Edits the details of a specified product in the database.",
				"parameters": [
					{
						"in": "body",
						"name": "product",
						"description": "The old and new product details.",
						"schema": {
							"type": "object",
							"required": [
								"oldValues",
								"newValues"
							],
							"properties": {
								"oldValues": {
									"type": "object",
									"properties": {
										"oldProductName": {
											"type": "string"
										}
									}
								},
								"newValues": {
									"type": "object",
									"properties": {
										"newProductName": {
											"type": "string"
										},
										"newProductStock": {
											"type": "integer"
										}
									}
								}
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successfully edited product."
					},
					"400": {
						"description": "Product name already exists."
					}
				}
			},
			"/products/editjs": {
				"get": {
				"tags": ["Products"],
					"summary": "Retrieve the editProducts.js script.",
					"description": "Returns the editProducts.js script for client-side product editing functionality.",
					"responses": {
						"200": {
							"description": "Successfully retrieved editProducts.js script.",
							"content": {
								"application/javascript": {
									"schema": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"/products/productsjs": {
				"get": {
				"tags": ["Products"],
					"summary": "Retrieve the getProducts.js script.",
					"description": "Returns the getProducts.js script for client-side product functionality.",
					"responses": {
						"200": {
							"description": "Successfully retrieved getProducts.js script.",
							"content": {
								"application/javascript": {
									"schema": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"/products/browsejs": {
				"get": {
				"tags": ["Products"],
					"summary": "Retrieve the browseProducts.js script.",
					"description": "Returns the browseProducts.js script for client-side product browsing functionality.",
					"responses": {
						"200": {
							"description": "Successfully retrieved browseProducts.js script.",
							"content": {
								"application/javascript": {
									"schema": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"/products/productdata": {
				"get": {
				"tags": ["Products"],
					"summary": "Fetch product data for the user.",
					"description": "Returns a JSON array of the user's product data.",
					"responses": {
						"200": {
							"description": "Successfully retrieved product data.",
							"content": {
								"application/json": {
									"schema": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"product_name": {
													"type": "string"
												},
												"stock": {
													"type": "integer"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"/products/allproductdata": {
				"get": {
				"tags": ["Products"],
					"summary": "Fetch all available product data.",
					"description": "Returns a JSON array of all available products, excluding those created by the user"
				}
			}
		}
	}
}
